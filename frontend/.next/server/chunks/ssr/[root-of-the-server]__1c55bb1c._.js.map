{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///E:/taskflow/taskflow-app/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///E:/taskflow/taskflow-app/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,oSAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///E:/taskflow/taskflow-app/frontend/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///E:/taskflow/taskflow-app/frontend/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,oSAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///E:/taskflow/taskflow-app/frontend/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,6WAAC,2XAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EACV,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,6WAAC,2XAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,6WAAC,4RAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///E:/taskflow/taskflow-app/frontend/components/TaskCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { TaskItem } from \"../types/workspace\";\r\nimport { Checkbox } from \"./ui/checkbox\";\r\nimport { Card, CardContent } from \"./ui/card\";\r\nimport { Badge } from \"./ui/badge\";\r\n\r\ninterface TaskCardProps {\r\n  task: TaskItem;\r\n  phaseId?: string; // Will be used in Phase 2 for drag & drop\r\n  etapaId?: string; // Will be used in Phase 2 for drag & drop\r\n}\r\n\r\nexport function TaskCard({ task }: TaskCardProps) {\r\n  const completedSubtasks = task.subtasks.filter(\r\n    (subtask) => subtask.completed\r\n  ).length;\r\n  const totalSubtasks = task.subtasks.length;\r\n  const hasSubtasks = totalSubtasks > 0;\r\n\r\n  return (\r\n    <Card\r\n      className={`transition-all duration-200 hover:shadow-md ${\r\n        task.completed\r\n          ? \"bg-green-50 dark:bg-green-950 border-green-200 dark:border-green-800\"\r\n          : \"bg-white dark:bg-gray-900\"\r\n      }`}\r\n    >\r\n      <CardContent className=\"p-3\">\r\n        <div className=\"flex items-start gap-3\">\r\n          <Checkbox\r\n            checked={task.completed}\r\n            className=\"mt-0.5\"\r\n            // Note: onChange will be implemented in Phase 2 (interactive)\r\n          />\r\n\r\n          <div className=\"flex-1 space-y-2\">\r\n            <div className=\"flex items-start justify-between\">\r\n              <p\r\n                className={`text-sm ${\r\n                  task.completed\r\n                    ? \"line-through text-muted-foreground\"\r\n                    : \"text-gray-900 dark:text-gray-100\"\r\n                }`}\r\n              >\r\n                {task.title}\r\n              </p>\r\n\r\n              {hasSubtasks && (\r\n                <Badge variant=\"outline\" className=\"text-xs ml-2\">\r\n                  {completedSubtasks}/{totalSubtasks}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n\r\n            {/* Subtasks */}\r\n            {hasSubtasks && (\r\n              <div className=\"space-y-1 pl-2 border-l-2 border-gray-200 dark:border-gray-700\">\r\n                {task.subtasks.map((subtask) => (\r\n                  <div key={subtask.id} className=\"flex items-center gap-2\">\r\n                    <Checkbox\r\n                      checked={subtask.completed}\r\n                      className=\"scale-75\"\r\n                      // Note: onChange will be implemented in Phase 2\r\n                    />\r\n                    <span\r\n                      className={`text-xs ${\r\n                        subtask.completed\r\n                          ? \"line-through text-muted-foreground\"\r\n                          : \"text-gray-700 dark:text-gray-300\"\r\n                      }`}\r\n                    >\r\n                      {subtask.title}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Task completion status indicator */}\r\n        {task.completed && (\r\n          <div className=\"mt-2 flex items-center justify-end\">\r\n            <Badge variant=\"default\" className=\"text-xs\">\r\n              Concluída\r\n            </Badge>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AAaO,SAAS,SAAS,EAAE,IAAI,EAAiB;IAC9C,MAAM,oBAAoB,KAAK,QAAQ,CAAC,MAAM,CAC5C,CAAC,UAAY,QAAQ,SAAS,EAC9B,MAAM;IACR,MAAM,gBAAgB,KAAK,QAAQ,CAAC,MAAM;IAC1C,MAAM,cAAc,gBAAgB;IAEpC,qBACE,6WAAC,qIAAA,CAAA,OAAI;QACH,WAAW,CAAC,4CAA4C,EACtD,KAAK,SAAS,GACV,yEACA,6BACJ;kBAEF,cAAA,6WAAC,qIAAA,CAAA,cAAW;YAAC,WAAU;;8BACrB,6WAAC;oBAAI,WAAU;;sCACb,6WAAC,yIAAA,CAAA,WAAQ;4BACP,SAAS,KAAK,SAAS;4BACvB,WAAU;;;;;;sCAIZ,6WAAC;4BAAI,WAAU;;8CACb,6WAAC;oCAAI,WAAU;;sDACb,6WAAC;4CACC,WAAW,CAAC,QAAQ,EAClB,KAAK,SAAS,GACV,uCACA,oCACJ;sDAED,KAAK,KAAK;;;;;;wCAGZ,6BACC,6WAAC,sIAAA,CAAA,QAAK;4CAAC,SAAQ;4CAAU,WAAU;;gDAChC;gDAAkB;gDAAE;;;;;;;;;;;;;gCAM1B,6BACC,6WAAC;oCAAI,WAAU;8CACZ,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,wBAClB,6WAAC;4CAAqB,WAAU;;8DAC9B,6WAAC,yIAAA,CAAA,WAAQ;oDACP,SAAS,QAAQ,SAAS;oDAC1B,WAAU;;;;;;8DAGZ,6WAAC;oDACC,WAAW,CAAC,QAAQ,EAClB,QAAQ,SAAS,GACb,uCACA,oCACJ;8DAED,QAAQ,KAAK;;;;;;;2CAbR,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;gBAuB7B,KAAK,SAAS,kBACb,6WAAC;oBAAI,WAAU;8BACb,cAAA,6WAAC,sIAAA,CAAA,QAAK;wBAAC,SAAQ;wBAAU,WAAU;kCAAU;;;;;;;;;;;;;;;;;;;;;;AAQzD","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///E:/taskflow/taskflow-app/frontend/components/EtapaHeader.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Etapa } from \"../types/workspace\";\r\nimport { Badge } from \"./ui/badge\";\r\n\r\ninterface EtapaHeaderProps {\r\n  etapa: Etapa;\r\n}\r\n\r\nexport function EtapaHeader({ etapa }: EtapaHeaderProps) {\r\n  const totalTasks = etapa.tasks.length;\r\n  const completedTasks = etapa.tasks.filter((task) => task.completed).length;\r\n  const progressPercentage =\r\n    totalTasks > 0 ? Math.round((completedTasks / totalTasks) * 100) : 0;\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between py-2 px-3 bg-gray-50 dark:bg-gray-800 rounded-md\">\r\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n        {etapa.title}\r\n      </h4>\r\n\r\n      <div className=\"flex items-center gap-2\">\r\n        <span className=\"text-xs text-muted-foreground\">\r\n          {completedTasks}/{totalTasks}\r\n        </span>\r\n        <Badge\r\n          variant={progressPercentage === 100 ? \"default\" : \"secondary\"}\r\n          className=\"text-xs\"\r\n        >\r\n          {progressPercentage}%\r\n        </Badge>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AASO,SAAS,YAAY,EAAE,KAAK,EAAoB;IACrD,MAAM,aAAa,MAAM,KAAK,CAAC,MAAM;IACrC,MAAM,iBAAiB,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAS,KAAK,SAAS,EAAE,MAAM;IAC1E,MAAM,qBACJ,aAAa,IAAI,KAAK,KAAK,CAAC,AAAC,iBAAiB,aAAc,OAAO;IAErE,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAG,WAAU;0BACX,MAAM,KAAK;;;;;;0BAGd,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAK,WAAU;;4BACb;4BAAe;4BAAE;;;;;;;kCAEpB,6WAAC,sIAAA,CAAA,QAAK;wBACJ,SAAS,uBAAuB,MAAM,YAAY;wBAClD,WAAU;;4BAET;4BAAmB;;;;;;;;;;;;;;;;;;;AAK9B","debugId":null}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file:///E:/taskflow/taskflow-app/frontend/components/KanbanColumn.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Phase } from \"../types/workspace\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\r\nimport { Badge } from \"./ui/badge\";\r\nimport { TaskCard } from \"./TaskCard\";\r\nimport { EtapaHeader } from \"./EtapaHeader\";\r\n\r\ninterface KanbanColumnProps {\r\n  phase: Phase & { fileName: string; filePath: string };\r\n  fileName: string;\r\n}\r\n\r\nexport function KanbanColumn({ phase, fileName }: KanbanColumnProps) {\r\n  const totalTasks = phase.etapas.reduce(\r\n    (acc, etapa) => acc + etapa.tasks.length,\r\n    0\r\n  );\r\n  const completedTasks = phase.etapas.reduce(\r\n    (acc, etapa) => acc + etapa.tasks.filter((task) => task.completed).length,\r\n    0\r\n  );\r\n  const progressPercentage =\r\n    totalTasks > 0 ? Math.round((completedTasks / totalTasks) * 100) : 0;\r\n\r\n  return (\r\n    <div className=\"flex-shrink-0 w-80\">\r\n      <Card className=\"h-full\">\r\n        <CardHeader className=\"pb-3\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-lg font-medium\">{phase.title}</CardTitle>\r\n            <Badge\r\n              variant={progressPercentage === 100 ? \"default\" : \"secondary\"}\r\n            >\r\n              {progressPercentage}%\r\n            </Badge>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\r\n            <span>{fileName}</span>\r\n            <span>\r\n              {completedTasks}/{totalTasks} tarefas\r\n            </span>\r\n          </div>\r\n\r\n          {/* Progress Bar */}\r\n          <div className=\"w-full bg-gray-200 rounded-full h-2 dark:bg-gray-700\">\r\n            <div\r\n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n              style={{ width: `${progressPercentage}%` }}\r\n            />\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardContent className=\"space-y-4 max-h-96 overflow-y-auto\">\r\n          {phase.etapas.map((etapa) => (\r\n            <div key={etapa.id} className=\"space-y-2\">\r\n              <EtapaHeader etapa={etapa} />\r\n\r\n              <div className=\"space-y-2 pl-2\">\r\n                {etapa.tasks.map((task) => (\r\n                  <TaskCard\r\n                    key={task.id}\r\n                    task={task}\r\n                    phaseId={phase.id}\r\n                    etapaId={etapa.id}\r\n                  />\r\n                ))}\r\n\r\n                {etapa.tasks.length === 0 && (\r\n                  <div className=\"text-xs text-muted-foreground italic pl-4\">\r\n                    Nenhuma tarefa nesta etapa\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {phase.etapas.length === 0 && (\r\n            <div className=\"text-center text-muted-foreground\">\r\n              <p className=\"text-sm\">Nenhuma etapa encontrada</p>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAaO,SAAS,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAqB;IACjE,MAAM,aAAa,MAAM,MAAM,CAAC,MAAM,CACpC,CAAC,KAAK,QAAU,MAAM,MAAM,KAAK,CAAC,MAAM,EACxC;IAEF,MAAM,iBAAiB,MAAM,MAAM,CAAC,MAAM,CACxC,CAAC,KAAK,QAAU,MAAM,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAS,KAAK,SAAS,EAAE,MAAM,EACzE;IAEF,MAAM,qBACJ,aAAa,IAAI,KAAK,KAAK,CAAC,AAAC,iBAAiB,aAAc,OAAO;IAErE,qBACE,6WAAC;QAAI,WAAU;kBACb,cAAA,6WAAC,qIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,6WAAC,qIAAA,CAAA,aAAU;oBAAC,WAAU;;sCACpB,6WAAC;4BAAI,WAAU;;8CACb,6WAAC,qIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAuB,MAAM,KAAK;;;;;;8CACvD,6WAAC,sIAAA,CAAA,QAAK;oCACJ,SAAS,uBAAuB,MAAM,YAAY;;wCAEjD;wCAAmB;;;;;;;;;;;;;sCAIxB,6WAAC;4BAAI,WAAU;;8CACb,6WAAC;8CAAM;;;;;;8CACP,6WAAC;;wCACE;wCAAe;wCAAE;wCAAW;;;;;;;;;;;;;sCAKjC,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC;gCACC,WAAU;gCACV,OAAO;oCAAE,OAAO,GAAG,mBAAmB,CAAC,CAAC;gCAAC;;;;;;;;;;;;;;;;;8BAK/C,6WAAC,qIAAA,CAAA,cAAW;oBAAC,WAAU;;wBACpB,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,sBACjB,6WAAC;gCAAmB,WAAU;;kDAC5B,6WAAC,sIAAA,CAAA,cAAW;wCAAC,OAAO;;;;;;kDAEpB,6WAAC;wCAAI,WAAU;;4CACZ,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,qBAChB,6WAAC,mIAAA,CAAA,WAAQ;oDAEP,MAAM;oDACN,SAAS,MAAM,EAAE;oDACjB,SAAS,MAAM,EAAE;mDAHZ,KAAK,EAAE;;;;;4CAOf,MAAM,KAAK,CAAC,MAAM,KAAK,mBACtB,6WAAC;gDAAI,WAAU;0DAA4C;;;;;;;;;;;;;+BAdvD,MAAM,EAAE;;;;;wBAsBnB,MAAM,MAAM,CAAC,MAAM,KAAK,mBACvB,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC;gCAAE,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOrC","debugId":null}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["file:///E:/taskflow/taskflow-app/frontend/components/KanbanBoard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { WorkspaceData } from \"../types/workspace\";\r\nimport { KanbanColumn } from \"./KanbanColumn\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\r\n\r\ninterface KanbanBoardProps {\r\n  workspace: WorkspaceData;\r\n}\r\n\r\nexport function KanbanBoard({ workspace }: KanbanBoardProps) {\r\n  // Collect all phases from all files\r\n  const allPhases = workspace.files.flatMap((file) =>\r\n    file.content.phases.map((phase) => ({\r\n      ...phase,\r\n      fileName: file.fileName,\r\n      filePath: file.filePath,\r\n    }))\r\n  );\r\n\r\n  if (allPhases.length === 0) {\r\n    return (\r\n      <Card className=\"w-full\">\r\n        <CardHeader>\r\n          <CardTitle>Nenhuma Fase Encontrada</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <p className=\"text-muted-foreground\">\r\n            Os arquivos .mdc não contêm estrutura de fases identificável.\r\n          </p>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {/* Header */}\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-gray-100\">\r\n          Kanban - {workspace.files.length} arquivo(s)\r\n        </h2>\r\n        <p className=\"text-sm text-muted-foreground\">\r\n          Visualização das fases e tarefas dos arquivos .mdc\r\n        </p>\r\n      </div>\r\n\r\n      {/* Kanban Columns */}\r\n      <div className=\"flex gap-6 overflow-x-auto pb-4\">\r\n        {allPhases.map((phase) => (\r\n          <KanbanColumn\r\n            key={`${phase.fileName}-${phase.id}`}\r\n            phase={phase}\r\n            fileName={phase.fileName}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Summary Stats */}\r\n      <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"text-2xl font-bold text-blue-600\">\r\n              {allPhases.length}\r\n            </div>\r\n            <p className=\"text-sm text-muted-foreground\">Total de Fases</p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"text-2xl font-bold text-green-600\">\r\n              {allPhases.reduce(\r\n                (acc, phase) =>\r\n                  acc +\r\n                  phase.etapas.reduce(\r\n                    (etapaAcc, etapa) => etapaAcc + etapa.tasks.length,\r\n                    0\r\n                  ),\r\n                0\r\n              )}\r\n            </div>\r\n            <p className=\"text-sm text-muted-foreground\">Total de Tarefas</p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"text-2xl font-bold text-purple-600\">\r\n              {allPhases.reduce(\r\n                (acc, phase) =>\r\n                  acc +\r\n                  phase.etapas.reduce(\r\n                    (etapaAcc, etapa) =>\r\n                      etapaAcc +\r\n                      etapa.tasks.filter((task) => task.completed).length,\r\n                    0\r\n                  ),\r\n                0\r\n              )}\r\n            </div>\r\n            <p className=\"text-sm text-muted-foreground\">Tarefas Concluídas</p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAUO,SAAS,YAAY,EAAE,SAAS,EAAoB;IACzD,oCAAoC;IACpC,MAAM,YAAY,UAAU,KAAK,CAAC,OAAO,CAAC,CAAC,OACzC,KAAK,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAU,CAAC;gBAClC,GAAG,KAAK;gBACR,UAAU,KAAK,QAAQ;gBACvB,UAAU,KAAK,QAAQ;YACzB,CAAC;IAGH,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,qBACE,6WAAC,qIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,6WAAC,qIAAA,CAAA,aAAU;8BACT,cAAA,6WAAC,qIAAA,CAAA,YAAS;kCAAC;;;;;;;;;;;8BAEb,6WAAC,qIAAA,CAAA,cAAW;8BACV,cAAA,6WAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;IAM7C;IAEA,qBACE,6WAAC;QAAI,WAAU;;0BAEb,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAG,WAAU;;4BAA0D;4BAC5D,UAAU,KAAK,CAAC,MAAM;4BAAC;;;;;;;kCAEnC,6WAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;0BAM/C,6WAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,sBACd,6WAAC,uIAAA,CAAA,eAAY;wBAEX,OAAO;wBACP,UAAU,MAAM,QAAQ;uBAFnB,GAAG,MAAM,QAAQ,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE;;;;;;;;;;0BAQ1C,6WAAC;gBAAI,WAAU;;kCACb,6WAAC,qIAAA,CAAA,OAAI;kCACH,cAAA,6WAAC,qIAAA,CAAA,cAAW;4BAAC,WAAU;;8CACrB,6WAAC;oCAAI,WAAU;8CACZ,UAAU,MAAM;;;;;;8CAEnB,6WAAC;oCAAE,WAAU;8CAAgC;;;;;;;;;;;;;;;;;kCAIjD,6WAAC,qIAAA,CAAA,OAAI;kCACH,cAAA,6WAAC,qIAAA,CAAA,cAAW;4BAAC,WAAU;;8CACrB,6WAAC;oCAAI,WAAU;8CACZ,UAAU,MAAM,CACf,CAAC,KAAK,QACJ,MACA,MAAM,MAAM,CAAC,MAAM,CACjB,CAAC,UAAU,QAAU,WAAW,MAAM,KAAK,CAAC,MAAM,EAClD,IAEJ;;;;;;8CAGJ,6WAAC;oCAAE,WAAU;8CAAgC;;;;;;;;;;;;;;;;;kCAIjD,6WAAC,qIAAA,CAAA,OAAI;kCACH,cAAA,6WAAC,qIAAA,CAAA,cAAW;4BAAC,WAAU;;8CACrB,6WAAC;oCAAI,WAAU;8CACZ,UAAU,MAAM,CACf,CAAC,KAAK,QACJ,MACA,MAAM,MAAM,CAAC,MAAM,CACjB,CAAC,UAAU,QACT,WACA,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAS,KAAK,SAAS,EAAE,MAAM,EACrD,IAEJ;;;;;;8CAGJ,6WAAC;oCAAE,WAAU;8CAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMzD","debugId":null}},
    {"offset": {"line": 894, "column": 0}, "map": {"version":3,"sources":["file:///E:/taskflow/taskflow-app/frontend/components/ProjectSelector.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { FolderIcon, AlertCircleIcon } from \"lucide-react\";\r\nimport { WorkspaceData } from \"../types/workspace\";\r\nimport { KanbanBoard } from \"./KanbanBoard\";\r\n\r\nexport function ProjectSelector() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [workspace, setWorkspace] = useState<WorkspaceData | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleSelectProject = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Debug: Check if electronAPI exists\r\n      console.log(\"window.electronAPI:\", window.electronAPI);\r\n      console.log(\r\n        \"openProjectDialog method:\",\r\n        window.electronAPI?.openProjectDialog\r\n      );\r\n\r\n      // Open project selection dialog\r\n      const projectPath = await window.electronAPI.openProjectDialog();\r\n\r\n      if (!projectPath) {\r\n        setLoading(false);\r\n        return; // User cancelled\r\n      }\r\n\r\n      // Load workspace from selected path\r\n      const result = await window.electronAPI.loadWorkspace(projectPath);\r\n\r\n      if (!result.success) {\r\n        throw new Error(result.error || \"Failed to load workspace\");\r\n      }\r\n\r\n      setWorkspace(result.data || null);\r\n      console.log(\"Workspace loaded:\", result.data);\r\n    } catch (err) {\r\n      console.error(\"Error loading project:\", err);\r\n      setError(err instanceof Error ? err.message : \"Unknown error occurred\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (workspace) {\r\n    return (\r\n      <div className=\"w-full space-y-6\">\r\n        {/* Header with project info */}\r\n        <Card className=\"w-full\">\r\n          <CardHeader>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <FolderIcon className=\"h-5 w-5\" />\r\n                  {workspace.projectPath}\r\n                </CardTitle>\r\n                <CardDescription>\r\n                  {workspace.files.length} arquivo(s) • Carregado em{\" \"}\r\n                  {new Date(workspace.loadedAt).toLocaleString()}\r\n                </CardDescription>\r\n              </div>\r\n              <Button variant=\"outline\" onClick={() => setWorkspace(null)}>\r\n                Trocar Projeto\r\n              </Button>\r\n            </div>\r\n          </CardHeader>\r\n\r\n          {workspace.scanErrors && workspace.scanErrors.length > 0 && (\r\n            <CardContent>\r\n              <div className=\"space-y-2\">\r\n                <h4 className=\"font-medium text-yellow-700 flex items-center gap-2\">\r\n                  <AlertCircleIcon className=\"h-4 w-4\" />\r\n                  Avisos de Scan:\r\n                </h4>\r\n                <div className=\"space-y-1 max-h-32 overflow-y-auto\">\r\n                  {workspace.scanErrors.map((error, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"text-xs text-yellow-700 bg-yellow-50 p-2 rounded-md\"\r\n                    >\r\n                      {error}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          )}\r\n        </Card>\r\n\r\n        {/* Kanban Board */}\r\n        <KanbanBoard workspace={workspace} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-md mx-auto\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <FolderIcon className=\"h-5 w-5\" />\r\n          Selecionar Projeto\r\n        </CardTitle>\r\n        <CardDescription>\r\n          Escolha uma pasta que contenha arquivos .mdc para visualizar no Kanban\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        {error && (\r\n          <div className=\"mb-4 p-3 text-sm text-red-700 bg-red-50 border border-red-200 rounded-md flex items-center gap-2\">\r\n            <AlertCircleIcon className=\"h-4 w-4\" />\r\n            {error}\r\n          </div>\r\n        )}\r\n        <Button\r\n          onClick={handleSelectProject}\r\n          disabled={loading}\r\n          className=\"w-full\"\r\n        >\r\n          {loading ? \"Carregando...\" : \"Selecionar Pasta\"}\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}