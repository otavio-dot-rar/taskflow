---
description: MVP development plan with detailed phases, stages and tasks - activate when following roadmap or planning development
globs: 
alwaysApply: false
---
# Plano de MVP Completo: Cursor TaskFlow v2.0 (Vis√£o H√≠brida)

## üéØ Vis√£o e Fluxo de Trabalho

O **Cursor TaskFlow** √© uma ferramenta h√≠brida de planejamento de ponta a ponta, oferecendo **duas portas de entrada principais**:

### üîÑ **Fluxo 1: Organizar Projeto Existente**
```
Pasta do Projeto ‚Üí Scanner .mdc ‚Üí Parser ‚Üí Dashboard/Kanban ‚Üí Edi√ß√£o ‚Üí Save
```

### ü§ñ **Fluxo 2: Criar Plano do Zero com IA**
```
Prompt do Usu√°rio ‚Üí IA (Gemini/OpenAI) ‚Üí .mdc files ‚Üí Parser ‚Üí Dashboard ‚Üí Edi√ß√£o ‚Üí Save
```

### üñ•Ô∏è **Tela Inicial Dual**
A interface inicial apresenta claramente as duas op√ß√µes:
- **"Abrir Projeto Existente"** - Para projetos com arquivos .mdc
- **"Criar Plano com IA"** - Para novos projetos via prompt

## üèóÔ∏è Arquitetura T√©cnica

### **Stack Principal**
- **Framework Desktop:** Electron 36.5.0
- **UI Framework:** Next.js 15.3.4 com App Router
- **Linguagem:** TypeScript
- **Componentes:** shadcn/ui (estilo new-york)
- **Estiliza√ß√£o:** Tailwind CSS v4
- **Drag & Drop:** @dnd-kit
- **Parsing:** gray-matter + remark
- **IA:** Google Gemini API / OpenAI API

### **Sistema de Views**
- **Dashboard View** (padr√£o) - Tabela com estat√≠sticas
- **Kanban View** (op√ß√£o) - Colunas por fase/etapa
- **Timeline View** (futuro) - Linha do tempo
- **List View** (futuro) - Lista simples

## üìã Plano de Desenvolvimento

### ‚úÖ **Fase 0: Funda√ß√£o - COMPLETA**
**Status:** 100% ‚úÖ **Conclu√≠da**

- [x] Setup Electron + Next.js + TypeScript
- [x] Configura√ß√£o shadcn/ui + Tailwind CSS
- [x] Estrutura de build dual-process
- [x] Scripts de desenvolvimento funcionais
- [x] Janela desktop b√°sica funcionando

### ‚úÖ **Fase 1: Leitura e Visualiza√ß√£o - COMPLETA**
**Status:** 100% ‚úÖ **Conclu√≠da**

#### **1.1 Parser de Arquivos .mdc**
- [x] **MdcParser service** - Parsing completo de metadata + content
- [x] **Workspace scanner** - Detec√ß√£o autom√°tica de arquivos .mdc
- [x] **TypeScript types** - Interfaces completas para dados
- [x] **Error handling** - Tratamento robusto de erros

#### **1.2 Interface de Visualiza√ß√£o**
- [x] **WorkspaceDashboard** - Layout principal com sidebar
- [x] **DashboardView** - Visualiza√ß√£o tabular moderna
- [x] **KanbanBoard** - Visualiza√ß√£o Kanban (preservada como op√ß√£o)
- [x] **ViewSwitcher** - Altern√¢ncia entre visualiza√ß√µes
- [x] **Sidebar** - Navega√ß√£o e estat√≠sticas do projeto

#### **1.3 Comunica√ß√£o IPC**
- [x] **Preload script** - Bridge segura entre processos
- [x] **File operations** - Abertura de di√°logos e leitura
- [x] **Error handling** - Tratamento de erros IPC
- [x] **Type safety** - Interfaces tipadas para comunica√ß√£o

#### **1.4 Componentes UI**
- [x] **ProjectSelector** - Sele√ß√£o e carregamento de projetos
- [x] **TaskCard** - Cards de tarefas com status
- [x] **EtapaHeader** - Headers de etapas com progresso
- [x] **KanbanColumn** - Colunas do Kanban

### ‚úÖ **Fase 2: Interatividade e Edi√ß√£o - COMPLETA**
**Status:** 100% ‚úÖ **Conclu√≠da**

- [x] **Drag & Drop** - Movimenta√ß√£o de tarefas entre colunas
- [x] **Checkbox editing** - Toggle de status de tarefas
- [x] **State management** - Gerenciamento de estado em mem√≥ria
- [x] **Modal de edi√ß√£o** - Edi√ß√£o de metadados YAML

### ‚úÖ **Fase 3: Persist√™ncia - COMPLETA**
**Status:** 100% ‚úÖ **Conclu√≠da**

- [x] **MdcSerializer** - Convers√£o JSON ‚Üí Markdown
- [x] **File saving** - Salvamento de altera√ß√µes
- [x] **Backup system** - Sistema de backup autom√°tico
- [x] **Change tracking** - Rastreamento de mudan√ßas

### üöÄ **Fase 4: IA Integration - EM ANDAMENTO**
**Status:** 0% üîÑ **Pr√≥xima Prioridade**

#### **4.1 UI para Gera√ß√£o IA**
- [ ] **Tela inicial dual** - Bot√µes "Abrir Existente" vs "Criar com IA"
- [ ] **Modal de prompt** - Interface para entrada do prompt
- [ ] **Loading states** - Indicadores de progresso da IA
- [ ] **Preview de resultados** - Visualiza√ß√£o antes de aceitar

#### **4.2 Integra√ß√£o com APIs de IA**
- [ ] **Gemini API integration** - Configura√ß√£o e chamadas
- [ ] **OpenAI fallback** - API alternativa
- [ ] **Prompt engineering** - Templates otimizados para .mdc
- [ ] **Response parsing** - Convers√£o resposta IA ‚Üí estrutura .mdc

#### **4.3 Gera√ß√£o de Arquivos**
- [ ] **Template system** - Templates base para diferentes tipos de projeto
- [ ] **File generation** - Cria√ß√£o autom√°tica de arquivos .mdc
- [ ] **Validation** - Valida√ß√£o da estrutura gerada
- [ ] **Error recovery** - Tratamento de falhas na gera√ß√£o

#### **4.4 Fluxo Completo**
- [ ] **Project creation workflow** - Fluxo completo de cria√ß√£o
- [ ] **Save generated project** - Salvamento do projeto gerado
- [ ] **Load into dashboard** - Carregamento autom√°tico na interface
- [ ] **Edit generated content** - Edi√ß√£o p√≥s-gera√ß√£o

### üîÆ **Fase 5: Refinamentos (Futuro)**
**Status:** 0% üìã **Planejado**

- [ ] **Timeline View** - Visualiza√ß√£o de linha do tempo
- [ ] **List View** - Visualiza√ß√£o em lista
- [ ] **Export features** - Exporta√ß√£o para outros formatos
- [ ] **Collaboration** - Recursos de colabora√ß√£o
- [ ] **Plugins system** - Sistema de plugins

## üéØ **Pr√≥ximos Passos Imediatos**

### **Prioridade 1: Tela Inicial Dual**
1. Modificar `frontend/app/page.tsx` para mostrar duas op√ß√µes
2. Criar componente `CreateProjectModal` para prompt IA
3. Atualizar `ProjectSelector` para lidar com ambos fluxos

### **Prioridade 2: Integra√ß√£o IA**
1. Configurar API keys (Gemini/OpenAI)
2. Implementar service `AIProjectGenerator`
3. Criar templates de prompt para diferentes tipos de projeto

### **Prioridade 3: Gera√ß√£o de Arquivos**
1. Implementar `MdcGenerator` service
2. Sistema de valida√ß√£o de estrutura gerada
3. Integra√ß√£o com fluxo existente de carregamento

## üìä **M√©tricas de Sucesso**

### **MVP M√≠nimo (Fase 4)**
- ‚úÖ Usu√°rio pode abrir projeto existente
- ‚è≥ Usu√°rio pode gerar projeto via IA
- ‚è≥ Projeto gerado carrega corretamente na interface
- ‚è≥ Usu√°rio pode editar projeto gerado
- ‚è≥ Altera√ß√µes s√£o salvas corretamente

### **MVP Completo**
- Dashboard e Kanban funcionais
- Drag & drop e edi√ß√£o completos
- Gera√ß√£o IA robusta e confi√°vel
- Experi√™ncia de usu√°rio fluida
- Performance adequada para projetos m√©dios

## üîß **Notas T√©cnicas**

### **Estrutura de Dados Mantida**
```typescript
interface WorkspaceData {
  projectPath: string;
  files: WorkspaceFile[];
  loadedAt: string;
  generatedByAI?: boolean; // Nova flag
}
```

### **Fluxo IA ‚Üí Parser**
```typescript
// IA gera estrutura
const aiResponse = await generateProject(prompt);
// Converte para arquivos .mdc
const mdcFiles = await convertToMdcFiles(aiResponse);
// Usa parser existente
const workspace = await loadWorkspace(tempPath);
```

### **Compatibilidade**
- Todo c√≥digo existente permanece funcional
- Parser atual funciona com arquivos gerados por IA
- Interface atual suporta projetos de ambas origens

---

**√öltima Atualiza√ß√£o:** 22/01/2025  
**Pr√≥xima Revis√£o:** Ap√≥s conclus√£o da Fase 4  
**Respons√°vel:** Equipe de Desenvolvimento
