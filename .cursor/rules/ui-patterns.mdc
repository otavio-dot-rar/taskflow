---
description: UI/UX patterns with shadcn/ui, Kanban components, layouts and visual states - activate when working with interface
globs: 
alwaysApply: false
---
# Padrões de UI/UX - Cursor TaskFlow

## 🎨 Sistema de Design

### **Biblioteca de Componentes**
- **Base:** shadcn/ui (estilo new-york)
- **Estilização:** Tailwind CSS v4
- **Ícones:** Lucide React
- **Cores:** Sistema dark/light automático

### **Paleta de Cores Funcional**
```css
/* Status Colors */
--color-todo: #64748b;        /* Slate 500 - Tarefas pendentes */
--color-progress: #3b82f6;    /* Blue 500 - Em progresso */
--color-done: #10b981;        /* Emerald 500 - Concluídas */
--color-blocked: #ef4444;     /* Red 500 - Bloqueadas */

/* Phase Colors */
--color-phase-1: #8b5cf6;     /* Violet 500 - Planejamento */
--color-phase-2: #06b6d4;     /* Cyan 500 - Desenvolvimento */
--color-phase-3: #f59e0b;     /* Amber 500 - Testes */
--color-phase-4: #10b981;     /* Emerald 500 - Deploy */
```

## 🏗️ Layout Principal

### **WorkspaceDashboard Layout**
```
┌─────────────────────────────────────────────────────────────┐
│ [Logo] Cursor TaskFlow                    [View Switcher]   │
├─────────────────────────────────────────────────────────────┤
│ Sidebar (320px)    │ Main Content Area                      │
│                    │                                        │
│ • Navigation       │ ┌─ Dashboard View (default) ─────────┐ │
│ • Project Info     │ │ Project Overview                   │ │
│ • Quick Stats      │ │ Phase Tabs                         │ │
│ • Actions          │ │ Task Table                         │ │
│                    │ └────────────────────────────────────┘ │
│                    │                                        │
│                    │ ┌─ Kanban View (option) ─────────────┐ │
│                    │ │ Phase Columns                      │ │
│                    │ │ Etapa Headers                      │ │  
│                    │ │ Task Cards                         │ │
│                    │ └────────────────────────────────────┘ │
└─────────────────────────────────────────────────────────────┘
```

## 📋 Sistema de Views

### **1. Dashboard View (Padrão)**

#### **Componente Principal: DashboardView**
```typescript
interface DashboardViewProps {
  workspace: WorkspaceData;
}

// Layout: Overview + Phase Tabs + Task Table
```

#### **Elementos Visuais:**
- **Project Overview Card**
  - Nome do projeto
  - Estatísticas gerais (total fases, tarefas, progresso)
  - Progress bar visual
  - Última atualização

- **Phase Tabs**
  - Tabs horizontais para cada fase
  - Badge com contador de tarefas
  - Indicador de progresso por fase

- **Task Table**
  - Colunas: Task, Status, Phase, Due Date, Progress
  - Filtros por status e fase
  - Ordenação por prioridade
  - Actions (edit, complete, delete)

#### **Estados Visuais:**
```typescript
type TaskStatus = 'todo' | 'in-progress' | 'completed' | 'blocked';

// Badge Colors
const statusColors = {
  'todo': 'bg-slate-100 text-slate-700',
  'in-progress': 'bg-blue-100 text-blue-700', 
  'completed': 'bg-emerald-100 text-emerald-700',
  'blocked': 'bg-red-100 text-red-700'
};
```

### **2. Kanban View (Opção)**

#### **Componente Principal: KanbanBoard**
```typescript
interface KanbanBoardProps {
  workspace: WorkspaceData;
}

// Layout: Phase Columns → Etapa Headers → Task Cards
```

#### **Estrutura Visual:**
- **Phase Columns** - Colunas verticais por fase
- **Etapa Headers** - Separadores dentro das colunas
- **Task Cards** - Cards draggable com informações

#### **Drag & Drop:**
```typescript
// @dnd-kit implementation
const sensors = useSensors(
  useSensor(PointerSensor),
  useSensor(KeyboardSensor)
);

// Permite mover tarefas entre etapas e fases
```

### **3. Timeline View (Futuro)**
- Visualização de linha do tempo
- Dependências entre tarefas
- Marcos e deadlines

### **4. List View (Futuro)**
- Lista simples e compacta
- Filtros avançados
- Exportação facilitada

## 🧩 Componentes Específicos

### **Sidebar Component**
```typescript
interface SidebarProps {
  workspace: WorkspaceData;
  currentView: ViewMode;
  onViewChange: (view: ViewMode) => void;
  onChangeProject: () => void;
}
```

#### **Seções:**
1. **Navigation Menu**
   - Dashboard (LayoutDashboard icon)
   - Kanban (Kanban icon)
   - Timeline (Calendar icon)
   - List (List icon)

2. **Project Information**
   - Project path (truncated)
   - Files count
   - Load timestamp
   - "Change Project" button

3. **Quick Statistics**
   - Total phases
   - Total tasks
   - Completed tasks
   - Progress percentage

#### **Visual States:**
```css
/* Active nav item */
.nav-item-active {
  @apply bg-primary text-primary-foreground;
}

/* Hover states */
.nav-item:hover {
  @apply bg-muted;
}
```

### **ViewSwitcher Component**
```typescript
interface ViewSwitcherProps {
  currentView: ViewMode;
  onViewChange: (view: ViewMode) => void;
}
```

#### **Design:**
- Segmented control style
- Icons + labels
- Smooth transitions
- Keyboard navigation

```css
/* Toggle button group */
.view-switcher {
  @apply flex items-center gap-1 bg-muted p-1 rounded-lg;
}

.view-button {
  @apply px-3 py-2 rounded-md transition-all;
}

.view-button-active {
  @apply bg-background shadow-sm;
}
```

### **TaskCard Component (Kanban)**
```typescript
interface TaskCardProps {
  task: TaskItem;
  onToggle: (taskId: string) => void;
  onEdit: (task: TaskItem) => void;
}
```

#### **Layout:**
```
┌─────────────────────────────────┐
│ [✓] Task Title              [•] │ ← Checkbox + Menu
│ Brief description...            │ ← Description
│ ┌─ Progress ──────────────┐     │ ← Progress bar
│ │████████░░░░░░░░░░░░░░░░░░░░│ 35% │
│ └─────────────────────────┘     │
│ #tag1 #tag2           👤 User   │ ← Tags + Assignee
└─────────────────────────────────┘
```

#### **Estados:**
- **Default:** Border cinza, fundo branco
- **Completed:** Border verde, fundo verde claro, texto riscado
- **In Progress:** Border azul, barra de progresso
- **Blocked:** Border vermelho, ícone de warning

### **EtapaHeader Component**
```typescript
interface EtapaHeaderProps {
  etapa: Etapa;
  phaseColor: string;
}
```

#### **Design:**
```
┌─────────────────────────────────────────┐
│ 📋 Etapa Name                    (3/7) │ ← Icon + Name + Progress
│ ─────────────────────────────────────── │ ← Divider line
└─────────────────────────────────────────┘
```

## 🎯 Padrões de Interação

### **Drag & Drop (Kanban)**
- **Visual Feedback:** Card sendo arrastado fica semi-transparente
- **Drop Zones:** Destacadas com border pontilhado
- **Snap Animation:** Card "snapa" para posição final
- **Undo/Redo:** Possibilidade de desfazer movimentação

### **Modal Patterns**
- **Edit Task Modal:** Form completo para edição
- **Confirm Dialogs:** Para ações destrutivas
- **Loading States:** Skeleton loaders durante carregamento

### **Keyboard Shortcuts**
```typescript
// View switching
'Cmd/Ctrl + 1': 'Switch to Dashboard'
'Cmd/Ctrl + 2': 'Switch to Kanban'
'Cmd/Ctrl + 3': 'Switch to Timeline'
'Cmd/Ctrl + 4': 'Switch to List'

// Actions
'Cmd/Ctrl + N': 'New Task'
'Cmd/Ctrl + S': 'Save Project'
'Cmd/Ctrl + O': 'Open Project'
'Escape': 'Close Modal/Cancel'
```

## 📱 Responsividade Desktop

### **Breakpoints:**
```css
/* Desktop sizes */
sm: '1024px',   /* Small desktop */
md: '1280px',   /* Medium desktop */  
lg: '1440px',   /* Large desktop */
xl: '1920px',   /* Extra large */
```

### **Layout Adaptativo:**
- **< 1024px:** Sidebar collapses to icons only
- **< 1280px:** Task table becomes scrollable
- **> 1440px:** More columns visible, expanded sidebar

## 🎨 Temas e Personalização

### **Dark/Light Mode**
- Detecção automática do sistema
- Toggle manual disponível
- Persistência da preferência

### **Cores de Fase Customizáveis**
```typescript
interface PhaseTheme {
  primary: string;
  background: string; 
  border: string;
  text: string;
}

// Usuário pode customizar cores por fase
```

## 🔄 Estados de Loading

### **Skeleton Loaders**
- **Dashboard:** Skeleton cards para estatísticas
- **Kanban:** Skeleton columns e cards
- **Sidebar:** Skeleton navigation items

### **Progress Indicators**
- **Linear Progress:** Para operações com progresso conhecido
- **Spinner:** Para operações rápidas
- **Pulse Animation:** Para elementos carregando

## ✨ Animações e Transições

### **Micro-interactions**
```css
/* Hover effects */
.card:hover {
  @apply transform scale-[1.02] shadow-lg transition-all duration-200;
}

/* View transitions */
.view-enter {
  @apply opacity-0 transform translate-x-4;
}

.view-enter-active {
  @apply opacity-100 transform translate-x-0 transition-all duration-300;
}
```

### **Loading States**
- **Fade in:** Conteúdo aparece gradualmente
- **Slide in:** Elementos deslizam da direita
- **Stagger:** Elementos aparecem em sequência

---

**Última Atualização:** 22/01/2025  
**Padrões Baseados:** Material Design 3, Human Interface Guidelines  
**Acessibilidade:** WCAG 2.1 AA Compliant

